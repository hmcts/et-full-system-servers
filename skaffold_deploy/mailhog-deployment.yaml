apiVersion: v1
kind: Service
metadata:
  name: mailhog
  labels:
    app: mailhog
spec:
  ports:
  - name: smtp
    port: 1025
    protocol: TCP
  - name: web
    port: 8025
    protocol: TCP
  clusterIP: None
  selector:
    app: mailhog
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.26.1 (HEAD)
    traefik.http.routers.mail-router.rule: Host(`mail.et.127.0.0.1.nip.io`)
    traefik.http.routers.mail-router.service: mail-service
    traefik.http.services.mail-service.loadbalancer.server.port: "8025"
  creationTimestamp: null
  labels:
    app: mailhog
  name: mailhog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailhog
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.26.1 (HEAD)
        traefik.http.routers.mail-router.rule: Host(`mail.et.127.0.0.1.nip.io`)
        traefik.http.routers.mail-router.service: mail-service
        traefik.http.services.mail-service.loadbalancer.server.port: "8025"
      creationTimestamp: null
      labels:
        io.kompose.network/et_full_system: "true"
        app: mailhog
    spec:
      containers:
        - image: mailhog/mailhog:v1.0.1
          name: mailhog
          resources: {}
          ports:
          - name: smtp
            containerPort: 1025
            protocol: TCP
          - name: web
            containerPort: 8025
            protocol: TCP
      restartPolicy: Always
status: {}
